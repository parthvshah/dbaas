version: '3.7'

services:
  rmq:
    image: rabbitmq:3.8.3-alpine
  orchestrator:
    container_name: orch
    build:
        context: ./orchestrator
        dockerfile: Dockerfile
    command: sh -c "sleep 15 && python orchestrator.py"
    ports:
      - "5000:5000"
    volumes:
        - ./orchestrator:/app
    depends_on:
        - rmq
    restart: on-failure
    
  zoo:
    image: zookeeper
    restart: on-failure
    hostname: zoo
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 

  slave:
    container_name: slave
    build:
          context: ./slave
          dockerfile: Dockerfile
    command: sh -c "sleep 15 && python slave.py"
    volumes:
        - ./slave:/slave
    depends_on:
        - rmq
        - slave_mongo
    restart: on-failure

  slave_mongo:
    image: mongo
    restart: always


  master:
    container_name: master
    build:
          context: ./master
          dockerfile: Dockerfile
    command: sh -c "sleep 15 && python master.py"
    volumes:
          - ./master:/master
    depends_on:
        - rmq
        - master_mongo
    restart: on-failure

  master_mongo:
    image: mongo
    restart: always
  
  
